{"ast":null,"code":"import _defineProperty from \"/home/shivam/Desktop/finance/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shivam/Desktop/finance/frontend/src/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ChakraProvider, ColorModeProvider } from '@chakra-ui/react';\nimport { createClient, Provider } from 'urql';\nimport { withUrqlClient } from 'next-urql';\nimport theme from '../theme';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var client = createClient({\n    url: \"http://isohel.co.uk/api/graphql\",\n    exchanges: [dedupExchange, cacheExchange, ssr, // Add `ssr` in front of the `fetchExchange`\n    fetchExchange]\n  });\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      resetCSS: true,\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ColorModeProvider, {\n        options: {\n          useSystemColorMode: true\n        },\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\nexport default withUrqlClient(client)(MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/shivam/Desktop/finance/frontend/src/pages/_app.js"],"names":["ChakraProvider","ColorModeProvider","createClient","Provider","withUrqlClient","theme","MyApp","Component","pageProps","client","url","exchanges","dedupExchange","cacheExchange","ssr","fetchExchange","useSystemColorMode"],"mappings":";;;;;;;;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,kBAAlD;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,MAAvC;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAEvC,MAAMC,MAAM,GAAGP,YAAY,CAAC;AAC1BQ,IAAAA,GAAG,EAAE,iCADqB;AAE1BC,IAAAA,SAAS,EAAE,CACTC,aADS,EAETC,aAFS,EAGTC,GAHS,EAGJ;AACLC,IAAAA,aAJS;AAFe,GAAD,CAA3B;AAUA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEN,MAAlB;AAAA,2BACA,QAAC,cAAD;AAAgB,MAAA,QAAQ,MAAxB;AAAyB,MAAA,KAAK,EAAEJ,KAAhC;AAAA,6BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE;AACPW,UAAAA,kBAAkB,EAAE;AADb,SADX;AAAA,+BAKE,QAAC,SAAD,oBAAeR,SAAf;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAzBQF,K;AA2BT,eAAeF,cAAc,CAACK,MAAD,CAAd,CAAuBH,KAAvB,CAAf","sourcesContent":["import { ChakraProvider, ColorModeProvider } from '@chakra-ui/react'\nimport { createClient, Provider } from 'urql';\nimport { withUrqlClient } from 'next-urql';\n\nimport theme from '../theme'\n\nfunction MyApp({ Component, pageProps }) {\n\n  const client = createClient({\n    url: \"http://isohel.co.uk/api/graphql\",\n    exchanges: [\n      dedupExchange,\n      cacheExchange,\n      ssr, // Add `ssr` in front of the `fetchExchange`\n      fetchExchange,\n    ],\n  });\n\n  return (\n    <Provider client={client}>\n    <ChakraProvider resetCSS theme={theme}>\n      <ColorModeProvider\n        options={{\n          useSystemColorMode: true,\n        }}\n      >\n        <Component {...pageProps} />\n      </ColorModeProvider>\n    </ChakraProvider>\n    </Provider>\n  )\n}\n\nexport default withUrqlClient(client)(MyApp);\n"]},"metadata":{},"sourceType":"module"}